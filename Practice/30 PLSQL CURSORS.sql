/*
PROCEDURAL LANGUAGE SQL (PL/SQL) >>> ORACLE-SPECIFIC PROGRAMMING LANGUAGE BASED ON SQL WITH 
                                     PROCEDURAL EXTENSIONS DESIGNED TO RUN INSIDE THE ORACLE 
                                     DATABASE
                                     
CURSOR >>> SPECIAL CONSTRUCT USED IN PROCEDURL SQL TO HOLD THE DATA ROWS RETURNED BY A SQL
           QUERY
           
%ISOPEN >>> RETURNS TRUE IF THE CURSOR IS OPEN (READY FOR PROCESSING) OR FALSE IF THE CURSOR IS CLOSED;
            REMEMBER, BEFORE YOU CAN USE A CURSOR YOU MUST OPEN IT           
           
%ROWCOUNT >>> RETURNS THE NUMBER OF ROWS FETCHED SO FAR; IF THE CURSOR IS NOT OPEN, IT 
              RETURNS AN ERROR; IF NO FETCH HAS BEEN DONE BUT THE CURSOR IS OPEN IT RETURNS
              0
              
%FOUND >>> RETURNS TRUE IF THE LAST FETCH RETURNED A ROW, AND FALSE IF NOT; IF THE CURSOR IS NOT
           OPEN, IT RETURNS AN ERROR; IF NO FETCH HAS BEEN DONE, IT CONTAINS NULL
           
%NOTFOUND >>> RETURNS TRUE IF THE LAST FETCH DID NOT RETURN ANY ROW, AND FALSE IF IT DID; IF THE
              CURSOR IS NOT OPEN, IT RETURNS AN ERROR; IF NOT FETCH HAS BEEN DONE, IT CONTAINS NULL
           
CURSOR cursor IS select-query;           
*/

/*
LIST PRODUCTS THAT HAVE A GREATER QUANTITY ON HAND THAT THE AVERAGE QUANTITY ON HAND 
FOR ALL PRODUCTS
*/
CREATE OR REPLACE PROCEDURE PRC_CURSOR_EXAMPLE IS
    W_P_CODE PRODUCT.P_CODE%TYPE;
    W_P_DESCRIPT PRODUCT.P_DESCRIPT%TYPE;
    W_TOT NUMBER(3);
    
    CURSOR PROD_CURSOR IS
        SELECT P_CODE, P_DESCRIPT
        FROM PRODUCT
        WHERE P_QOH > (SELECT AVG(P_QOH) FROM PRODUCT);
    
    BEGIN        
        DBMS_OUTPUT.PUT_LINE('PRODUCTS WITH P_QOH > AVG(P_QOH)');
        DBMS_OUTPUT.PUT_LINE('------------------------------------------------');
        OPEN PROD_CURSOR;
        LOOP
            FETCH PROD_CURSOR INTO W_P_CODE, W_P_DESCRIPT;
            EXIT WHEN PROD_CURSOR%NOTFOUND;
            DBMS_OUTPUT.PUT_LINE(W_P_CODE || ' -> ' || W_P_DESCRIPT);
        END LOOP;
        
        DBMS_OUTPUT.PUT_LINE('------------------------------------------------');
        DBMS_OUTPUT.PUT_LINE('TOTAL PRODUCT PROCESSED ' || PROD_CURSOR%ROWCOUNT);
        DBMS_OUTPUT.PUT_LINE('------------------------------------------------');
        CLOSE PROD_CURSOR;
    END;
    
EXEC PRC_CURSOR_EXAMPLE;