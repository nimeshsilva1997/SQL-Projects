/*
SUBQUERY >>> A QUERY THAT IS EMBEDDED (OR NESTED) 
INSIDE ANOTHER QUERY; ITS OUTPUT PROVIDES INPUT
FOR THE OUTER QUERY

CORRELATED SUBQUERY >>> A SUBQUERY THAT EXECUTES ONC FOR
EACH ROW IN THE OUTER QUERY

SELECT T1.C1, T1.C2
FROM T1
WHERE T1.C1 NOT IN (SELECT T3.C1 FROM T3);

SELECT T1.C1, T1.C2
FROM T1
WHERE T1.C2 >= (SELECT AVG(T3.C2) FROM T3);
*/

SELECT V_CODE, V_NAME 
FROM VENDOR
WHERE V_CODE IN (SELECT V_CODE FROM PRODUCT);

SELECT P_CODE, P_DESCRIPT 
FROM PRODUCT
WHERE P_PRICE >= (SELECT AVG(P_PRICE) FROM PRODUCT);

/*
UPDATES THE PRODUCT PRICE TO THE AVERAGE PRODUCT PRICE, BUT
ONLY FOR PRODUCTS PROVIDED BY VENDORS WHO HAVE AN AREA CODE
EQUAL TO 615. THE FIRST SUBQUERY RETURNS THE AVERAGE PRICE; 
THE SECOND SUBQUERY RETURNS THE LIST OF VENDORS WITH AN AREA
CODE OF 615.
*/
UPDATE PRODUCT
SET P_PRICE = (SELECT AVG(P_PRICE) FROM PRODUCT)
WHERE V_CODE IN (SELECT V_CODE FROM VENDOR WHERE V_AREACODE = '615');

/*
DELETES THE PRODUCT TBALE ROWS PROVIDED BY VENDORS WITH AN AREA CODE
EQUAL TO 615. THE SUBQUERY RETURNS THE LIST OF VENDOR CODES WITH AN
AREA CODE EQUAL TO 615.
*/
DELETE FROM PRODUCT
WHERE V_CODE IN (SELECT V_CODE FROM VENDOR WHERE V_AREACODE = '615');

/*
RETURN ALL PRODUCTS WITH A PRICE GREATER THAN OR EQUAL TO THE AVERAGE
PRODUCT PRICE
*/
SELECT P_CODE, P_PRICE
FROM PRODUCT 
WHERE P_PRICE >= (SELECT AVG(P_PRICE) FROM PRODUCT);

/*
LIST ALL CUSTOMERS WHO ORDERED A CLAW HAMMER
*/
SELECT DISTINCT CUS_CODE, CUS_LNAME, CUS_FNAME
FROM CUSTOMER JOIN INVOICE USING(CUS_CODE) JOIN LINE USING(INV_NUMBER) JOIN PRODUCT USING(P_CODE)
WHERE P_CODE = (SELECT P_CODE FROM PRODUCT WHERE P_DESCRIPT = 'Claw hammer');

/*
LIST ALL CUSTOMERS WHO HAVE PURCHASED HAMMERS, SAWS, OR SAW BLADES
*/
SELECT DISTINCT CUS_CODE, CUS_LNAME, CUS_FNAME, P_CODE, P_DESCRIPT
FROM CUSTOMER JOIN INVOICE USING(CUS_CODE) JOIN LINE USING(INV_NUMBER) JOIN PRODUCT USING(P_CODE)
WHERE P_CODE IN (SELECT P_CODE FROM PRODUCT WHERE P_DESCRIPT LIKE '%hammer%' OR P_DESCRIPT LIKE '%saw%');

/*
LIST ALL PRODUCTS WITH A TOTAL QUANTITY SOLD GREATER THAN THE AVERAGE
QUANTITY SOLD
*/
SELECT P_CODE, SUM(LINE_UNITS)
FROM LINE
GROUP BY P_CODE
HAVING SUM(LINE_UNITS) > (SELECT AVG(LINE_UNITS) FROM LINE);

/*
LIST WHICH PRODUCTS COST MORE THAN ALL INDIVIDUAL PRODUCTS PROVIDED BY 
VENDORS FROM FLORIDA
*/
SELECT P_CODE, P_QOH*P_PRICE
FROM PRODUCT
WHERE P_QOH*P_PRICE > ALL (SELECT P_QOH*P_PRICE
                                FROM PRODUCT
                                WHERE V_CODE IN (SELECT V_CODE
                                                      FROM VENDOR
                                                      WHERE V_STATE = 'FL'));

/*
LIST ALL CUSTOMERS WHO PURCHASED BOTH PRODUCTS
*/
SELECT DISTINCT CUSTOMER.CUS_CODE, CUSTOMER.CUS_LNAME
FROM CUSTOMER,
     (SELECT INVOICE.CUS_CODE FROM INVOICE NATURAL JOIN LINE WHERE P_CODE = '13-Q2/P2') CP1,
     (SELECT INVOICE.CUS_CODE FROM INVOICE NATURAL JOIN LINE WHERE P_CODE = '23109-HB') CP2
WHERE CUSTOMER.CUS_CODE = CP1.CUS_CODE
AND CP1.CUS_CODE = CP2.CUS_CODE;

/*
LIST THE DIFFERENCE BETWEEN EACH PRODUCT'S PRICE AND THE AVERAGE PRODUCT 
PRICE
*/
SELECT P_CODE, P_PRICE, 
    (SELECT AVG(P_PRICE) FROM PRODUCT) AS AVG_PRICE,
    P_PRICE - (SELECT AVG(P_PRICE) FROM PRODUCT) AS DIFF
FROM PRODUCT;    

/*
COMPUTE THE AVERAGE UNITS SOLD FOR A PRODUCT, THEN COMPARE THAT AVERAGE
TO THE UNITS SOLD IN EACH SALE ROW, FROM THAT, ONLY SELECT THE ROWS IN
WHICH THE NUMBER OF UNITS SOLD IS GREATER
*/
SELECT INV_NUMBER, P_CODE, LINE_UNITS
FROM LINE LS
WHERE LS.LINE_UNITS > (SELECT AVG(LINE_UNITS) FROM LINE LA WHERE LA.P_CODE = LS.P_CODE);

/*
LIST ALL CUSTOMERS WHO HAVE PLACED AND ORDER RECENTLY
*/
SELECT CUS_CODE, CUS_LNAME, CUS_FNAME
FROM CUSTOMER
WHERE EXISTS (SELECT CUS_CODE FROM INVOICE WHERE INVOICE.CUS_CODE = CUSTOMER.CUS_CODE);

/*
LIST THE VENDOR CODE AND VENODR NAME FOR PRODUCTS WITH A QUANTITY ON HAND
THAT IS LESS THAN DOUBLE THE MINIMUM QUANTITY
*/
SELECT V_CODE, V_NAME
FROM VENDOR
WHERE EXISTS (SELECT * FROM PRODUCT WHERE P_QOH < P_MIN*2 AND VENDOR.V_CODE = PRODUCT.V_CODE);