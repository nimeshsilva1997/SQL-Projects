/*
PROCEDURAL LANGUAGE SQL (PL/SQL) >>> ORACLE-SPECIFIC PROGRAMMING LANGUAGE BASED ON SQL WITH 
                                     PROCEDURAL EXTENSIONS DESIGNED TO RUN INSIDE THE ORACLE 
                                     DATABASE
                                     
STORED PROCEDURE >>> A NAMED COLLECTION OF PROCEDURAL SQL STATEMENTS; BUSINESS LOGIC STORED
                     ON A SERVER IN THE FORM OF SQL CODE OR ANOTHER DBMS-SPECIFIC PROCEDURAL 
                     LANGUAGE
                     
CREATE OR REPLACE PROCEDURE procedure
AS BEGIN
    SQL COMMANDS;
END;    
*/

/*
PROCEDURE TO UPDATE THE DISCOUNTS OF PRODUCTS THAT HAVE 
MORE THAN DOUBLE THE MIN QUANTITY
*/
CREATE OR REPLACE PROCEDURE PRC_PROD_DISCOUNT
AS BEGIN
    UPDATE PRODUCT
    SET P_DISCOUNT = P_DISCOUNT+.05
    WHERE P_QOH >= P_MIN*2;
    
    DBMS_OUTPUT.PUT_LINE('** Update finished **');
END;

SELECT P_CODE, P_DESCRIPT, P_QOH, P_MIN, P_DISCOUNT 
FROM PRODUCT;

EXEC PRC_PROD_DISCOUNT;

SELECT P_CODE, P_DESCRIPT, P_QOH, P_MIN, P_DISCOUNT 
FROM PRODUCT;

/*
PROCEDURE TO UPDATE PRODUCT DISCOUNT BASED ON INPUT PARAMETER WPI
*/
CREATE OR REPLACE PROCEDURE PRC_PROD_DISCOUNT (WPI IN NUMBER)
AS BEGIN
    IF ((WPI <= 0) OR (WPI >= 1)) THEN 
        DBMS_OUTPUT.PUT_LINE('Error: Value must be greater than 0 and less than 1');
    ELSE
        UPDATE PRODUCT
        SET P_DISCOUNT = P_DISCOUNT+WPI
        WHERE P_QOH >= P_MIN*2;
        
        DBMS_OUTPUT.PUT_LINE('**Update finished**');
    END IF;
END;

EXEC PRC_PROD_DISCOUNT(1.5);

EXEC PRC_PROD_DISCOUNT(0.5);

/*
ADDS A CUSTOMER RECORD BASED ON INPUT PARAMTERS
*/
CREATE OR REPLACE PROCEDURE PRC_CUS_ADD (W_LN IN VARCHAR, W_FN IN VARCHAR, W_INIT IN VARCHAR, W_AC IN VARCHAR, W_PH IN VARCHAR) 
AS BEGIN
    INSERT INTO CUSTOMER(CUS_CODE, CUS_LNAME, CUS_FNAME, CUS_INITIAL, CUS_AREACODE, CUS_PHONE) 
    VALUES(CUS_CODE_SEQ.NEXTVAL, W_LN, W_FN, W_INIT, W_AC, W_PH);
    
    DBMS_OUTPUT.PUT_LINE('Customer ' || W_LN || ', ' || W_FN || ' added.');
END;

EXEC PRC_CUS_ADD('Walker', 'James', NULL, '615', '84-HORSE');

SELECT * 
FROM CUSTOMER
WHERE CUS_LNAME = 'Walker';

EXEC PRC_CUS_ADD('Lowery', 'Denise', NULL, NULL, NULL);

CREATE OR REPLACE PROCEDURE PRC_INV_ADD (W_CUS_CODE IN VARCHAR2, W_DATE IN DATE)
AS BEGIN
    INSERT INTO INVOICE(INV_NUMBER, CUS_CODE, INV_DATE)
    VALUES(INV_NUMBER_SEQ.NEXTVAL, W_CUS_CODE, W_DATE);
    
    DBMS_OUTPUT.PUT_LINE('Invoice added.');
END;

CREATE OR REPLACE PROCEDURE PRC_LINE_ADD (W_LN IN NUMBER, W_P_CODE IN VARCHAR2, W_LU IN NUMBER)
AS 
    W_LP NUMBER := 0;
BEGIN
    SELECT P_PRICE INTO W_LP
    FROM PRODUCT
    WHERE PRODUCT.P_CODE = W_P_CODE;
    
    INSERT INTO LINE (INV_NUMBER, LINE_NUMBER, P_CODE, LINE_UNITS, LINE_PRICE)
    VALUES(INV_NUMBER_SEQ.NEXTVAL, W_LN, W_P_CODE, W_LU, W_LP);
    
    DBMS_OUTPUT.PUT_LINE('Invoice line ' || W_LN || ' added.');
END;

EXEC PRC_INV_ADD(20012, '09-APR-2016');

EXEC PRC_LINE_ADD(1, '13-Q2/P2', 1);

EXEC PRC_LINE_ADD(2, '23109-HB', 1);

SELECT * FROM INVOICE WHERE CUS_CODE = 20012;

SELECT * FROM LINE WHERE INV_NUMBER = (SELECT INV_NUMBER FROM INVOICE WHERE CUS_CODE = 20012);

SELECT * FROM PRODUCT WHERE P_CODE IN ('13-Q2/P2', '23109-HB');

SELECT * FROM CUSTOMER WHERE CUS_CODE = 20012;