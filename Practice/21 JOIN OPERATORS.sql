/*
INNER JOIN >>> RETRIEVES ONLY ROWS THAT MEET A GIVEN CRITERION; THE
MOST COMMONLY USED TYPE OF JOIN

OUTER JOIN >>> RETRIEVES ROWS THAT MEET A GIVEN CRITERION, BUT ALSO
RETAINS ROWS THAT ARE UNMATCHED (LEFT AS NULL)

REMINDER ABOUT JOINS:
LIST THE TABLES IN THE FROM CLAUSE OF THE SELECT. BY
DEFAULT THE DATABASE WILL JOIN THE RECORDS FROM BOTH 
TABLES IN ALL POSSIBLE COMBINATIONS (CARTESIAN JOIN).
TO REMOVE THE CARTESIAN JOIN THE TABLES MUST BE JOINED 
ON A COMMON ATTRIBUTE TO FIND ONLY MATCHING RECORDS 
BETWEEN THE TABLES, WHICH IS USUALLY DONE IN THE WHERE
CLAUSE OF THE STATEMENT.

CROSS JOIN (CARTESIAN JOIN)
SELECT * 
FROM T1, T2;
<<OR>>
SELECT * 
FROM T1 CROSS JOIN T2;

INNER JOIN
(OLD-STYLE: RETURNS ONLY THE ROWS THAT MEET THE JOIN
CONDITION IN THE WHERE CLAUSE (OLD STYLE); ONLY ROWS
WITH MATCHING VALUES ARE SELECTED)
SELECT * 
FROM T1, T2
WHERE T1.C1 = T2.C1;
<<OR>>
(NATURAL JOIN: RETURNS ONLY THE ROWS WITH MATCHING
VALUES IN THE MATCHING COLUMNS; THE MATCHING COLUMNS MUST
HAVE THE SAME NAMES AND SIMILAR DATA TYPES)
SELECT * 
FROM T1 NATURAL JOIN T2;
<<OR>>
(JOIN USING: RETURNS ONLY THE ROWS THAT MEET THE JOIN
CONDITION INDICATED IN THE USING CLAUSE)
SELECT *
FROM T1 JOIN T2 USING (C1);
<<OR>>
(JOIN ON: RETURNS ONLY THE ROWS THAT MEET THE JOIN CONDITION
INDICATED IN THE ON CLAUSE)
SELECT *
FROM T1 JOIN T2 ON T1.C1 = T2.C1;

OUTER JOIN
(LEFT JOIN: RETURNS ROWS WITH MATCHING VALUES AND INCLUDES ALL
ROWS FROM THE LEFT TABLE (T1) WITH UNMATCHED VALUES)
SELECT *
FROMT T1 LEFT OUTER JOIN T2
ON T1.C1 = T2.C1;
<<OR>>
(RIGHT JOIN: RETURNS ROWS WITH MATCHING VALUES AND INCLUDES ALL
ROWS FROM THE RIGHT TABLE (T2) WITH UNMATCHED VALUES)
SELECT *
FROM T1 RIGHT OUTER JOIN T2
ON T1.C1 = T2.C1;
<<OR>>
(FULL JOIN: RETURNS ROWS MATCHING VALUES AND INCLUDES ALL ROWS
FROM BOTH TABLES (T1 AND T2) WITH UNMATCHED VALUES)
SELECT * 
FROM T1 FULL OUTER JOIN T2
ON T1.C1 = T2.C1;
*/

SELECT P_CODE, P_DESCRIPTION, P_PRICE, V_NAME
FROM PRODUCT, VENDOR
WHERE PRODUCT.V_CODE = VENDOR.V_CODE;

/*CROSS JOIN (CARTESIAN JOIN)*/
/*8 ROWS IN INVOICE X 18 ROW IN LINER = 144 ROWS RETURNED*/
SELECT * 
FROM INVOICE CROSS JOIN LINE;

SELECT I.INV_NUMBER, I.CUS_CODE, I.INV_DATE, L.P_CODE
FROM INVOICE I CROSS JOIN LINE L;

/*INNER JOIN*/
/*SELECT ONLY THE ROWS WITH COMMON VALUES IN THE COMMON ATTRIBUTES*/
SELECT CUS_CODE, CUS_LNAME, INV_NUMBER, INV_DATE
FROM CUSTOMER NATURAL JOIN INVOICE;

SELECT INV_NUMBER, P_CODE, P_DESCRIPT, LINE_UNITS, LINE_PRICE
FROM INVOICE NATURAL JOIN LINE NATURAL JOIN PRODUCT;

SELECT INV_NUMBER, P_CODE, P_DESCRIPT, LINE_UNITS, LINE_PRICE
FROM INVOICE JOIN LINE USING (INV_NUMBER) JOIN PRODUCT USING (P_CODE);

SELECT INVOICE.INV_NUMBER, PRODUCT.P_CODE, PRODUCT.P_DESCRIPT, LINE.LINE_UNITS, LINE.LINE_PRICE
FROM INVOICE JOIN LINE ON INVOICE.INV_NUMBER = LINE.INV_NUMBER JOIN PRODUCT ON LINE.P_CODE = PRODUCT.P_CODE;

/*OUTER JOIN*/
/*SELECTS ALL PRODUCTS AND INCLUDES THOSE VENDORS WITH NO MATCHING
PRODUCTS*/
SELECT P.P_CODE, V.V_CODE, V.V_NAME
FROM VENDOR V LEFT JOIN PRODUCT P ON V.V_CODE = P.V_CODE;

/*SELECTS ALL PRODUCTS AND INCLUDES PRODUCTS THAT DO NOT HAVE A 
MATCHING VENDOR*/
SELECT P.P_CODE, V.V_CODE, V.V_NAME
FROM VENDOR V RIGHT JOIN PRODUCT P ON V.V_CODE = P.V_CODE;

/*SELECT ALL PRODUCTS AND INCLUDES ALL PRODUCT ROWS (PRODUCTS
WITHOUT MATCHING VENDORS) AS WELL AS ALL VENDOR ROWS (VENDORS
WITHOU MATCHING PRODUCTS)*/
SELECT P.P_CODE, V.V_CODE, V.V_NAME
FROM VENDOR V FULL JOIN PRODUCT P ON V.V_CODE = P.V_CODE;